package de.dc.minion.model.addon.snapshot.component.controller;

import de.dc.minion.model.addon.snapshot.component.model.*;
import javafx.scene.control.TableCell;
import javafx.scene.control.TableColumn;
import javafx.scene.control.cell.PropertyValueFactory;

public abstract class BaseBindingSnapshotLayerController extends BaseSnapshotLayerController{
	
	protected SnapshotLayerBinding binding = new SnapshotLayerBinding();
	
	@Override
	public void initialize() {
		textSearch.textProperty().bindBidirectional(binding.textSearchProperty());
		listViewLayer.setItems(binding.sortedDataListViewLayer());
		binding.selectedDataListViewLayer().bind(listViewLayer.getSelectionModel().selectedItemProperty());
		comboBlendMode.setItems(binding.sortedDataComboBlendMode());
		binding.selectedDataComboBlendMode().bind(comboBlendMode.getSelectionModel().selectedItemProperty());
		sliderBlendOpacity.valueProperty().bindBidirectional(binding.sliderBlendOpacityProperty());
		labelBlendOpacity.textProperty().bindBidirectional(binding.labelBlendOpacityProperty());
		sliderBloomThreshold.valueProperty().bindBidirectional(binding.sliderBloomThresholdProperty());
		labelBloomThreshold.textProperty().bindBidirectional(binding.labelBloomThresholdProperty());
		sliderBoxBlurWidth.valueProperty().bindBidirectional(binding.sliderBoxBlurWidthProperty());
		labelBoxBlurWidth.textProperty().bindBidirectional(binding.labelBoxBlurWidthProperty());
		sliderBoxBlurHeight.valueProperty().bindBidirectional(binding.sliderBoxBlurHeightProperty());
		labelBoxBlurHeight.textProperty().bindBidirectional(binding.labelBoxBlurHeightProperty());
		sliderBoxBlurIteration.valueProperty().bindBidirectional(binding.sliderBoxBlurIterationProperty());
		labelBoxBlurIteration.textProperty().bindBidirectional(binding.labelBoxBlurIterationProperty());
		sliderColorAdjustContrast.valueProperty().bindBidirectional(binding.sliderColorAdjustContrastProperty());
		labelColorAdjustContrast.textProperty().bindBidirectional(binding.labelColorAdjustContrastProperty());
		sliderColorAdjustBrigthness.valueProperty().bindBidirectional(binding.sliderColorAdjustBrigthnessProperty());
		labelColorAdjustBrigthness.textProperty().bindBidirectional(binding.labelColorAdjustBrigthnessProperty());
		sliderColorAdjustHue.valueProperty().bindBidirectional(binding.sliderColorAdjustHueProperty());
		labelColorAdjustHue.textProperty().bindBidirectional(binding.labelColorAdjustHueProperty());
		sliderColorAdjustSaturation.valueProperty().bindBidirectional(binding.sliderColorAdjustSaturationProperty());
		labelColorAdjustSaturation.textProperty().bindBidirectional(binding.labelColorAdjustSaturationProperty());
		sliderDisplacementMapOffsetY.valueProperty().bindBidirectional(binding.sliderDisplacementMapOffsetYProperty());
		labelDisplacementMapOffsetY.textProperty().bindBidirectional(binding.labelDisplacementMapOffsetYProperty());
		sliderDisplacementMapOffsetX.valueProperty().bindBidirectional(binding.sliderDisplacementMapOffsetXProperty());
		labelDisplacementMapOffsetX.textProperty().bindBidirectional(binding.labelDisplacementMapOffsetXProperty());
		sliderDisplacementMapScaleX.valueProperty().bindBidirectional(binding.sliderDisplacementMapScaleXProperty());
		labelDisplacementMapScaleX.textProperty().bindBidirectional(binding.labelDisplacementMapScaleXProperty());
		sliderDisplacementMapScaleY.valueProperty().bindBidirectional(binding.sliderDisplacementMapScaleYProperty());
		labelDisplacementMapScaleY.textProperty().bindBidirectional(binding.labelDisplacementMapScaleYProperty());
		sliderGaussianBlurRadius.valueProperty().bindBidirectional(binding.sliderGaussianBlurRadiusProperty());
		labelGaussianBlurRadius.textProperty().bindBidirectional(binding.labelGaussianBlurRadiusProperty());
		sliderGlowLevel.valueProperty().bindBidirectional(binding.sliderGlowLevelProperty());
		labelGlowLevel.textProperty().bindBidirectional(binding.labelGlowLevelProperty());
		sliderLightningDiffuseConstant.valueProperty().bindBidirectional(binding.sliderLightningDiffuseConstantProperty());
		labelLightningDiffuseConstant.textProperty().bindBidirectional(binding.labelLightningDiffuseConstantProperty());
		sliderLightningSpectularConstant.valueProperty().bindBidirectional(binding.sliderLightningSpectularConstantProperty());
		labelLightningSpectularConstant.textProperty().bindBidirectional(binding.labelLightningSpectularConstantProperty());
		sliderLightningSpectularExponent.valueProperty().bindBidirectional(binding.sliderLightningSpectularExponentProperty());
		labelLightningSpectularExponent.textProperty().bindBidirectional(binding.labelLightningSpectularExponentProperty());
		sliderLightningsurcfaceScale.valueProperty().bindBidirectional(binding.sliderLightningsurcfaceScaleProperty());
		labelLightningsurcfaceScale.textProperty().bindBidirectional(binding.labelLightningsurcfaceScaleProperty());
		comboLightningLight.setItems(binding.sortedDataComboLightningLight());
		binding.selectedDataComboLightningLight().bind(comboLightningLight.getSelectionModel().selectedItemProperty());
		colorPickerLightning.valueProperty().bindBidirectional(binding.colorPickerLightningProperty());
		sliderLightningAzimuth.valueProperty().bindBidirectional(binding.sliderLightningAzimuthProperty());
		sliderLightningEvaluation.valueProperty().bindBidirectional(binding.sliderLightningEvaluationProperty());
		labelLightningAzimuth.textProperty().bindBidirectional(binding.labelLightningAzimuthProperty());
		labelLightningEvaluation.textProperty().bindBidirectional(binding.labelLightningEvaluationProperty());
		sliderMotionBlurAngle.valueProperty().bindBidirectional(binding.sliderMotionBlurAngleProperty());
		labelMotionBlurAngel.textProperty().bindBidirectional(binding.labelMotionBlurAngelProperty());
		sliderMotionBlurRadius.valueProperty().bindBidirectional(binding.sliderMotionBlurRadiusProperty());
		labelMotionBlurRadius.textProperty().bindBidirectional(binding.labelMotionBlurRadiusProperty());
		sliderPerspectiveTransformLlx.valueProperty().bindBidirectional(binding.sliderPerspectiveTransformLlxProperty());
		labelPerspectiveTransformLlx.textProperty().bindBidirectional(binding.labelPerspectiveTransformLlxProperty());
		sliderPerspectiveTransformLly.valueProperty().bindBidirectional(binding.sliderPerspectiveTransformLlyProperty());
		labelPerspectiveTransformLly.textProperty().bindBidirectional(binding.labelPerspectiveTransformLlyProperty());
		sliderPerspectiveTransformLrx.valueProperty().bindBidirectional(binding.sliderPerspectiveTransformLrxProperty());
		labelPerspectiveTransformLrx.textProperty().bindBidirectional(binding.labelPerspectiveTransformLrxProperty());
		sliderPerspectiveTransformLry.valueProperty().bindBidirectional(binding.sliderPerspectiveTransformLryProperty());
		labelPerspectiveTransformLry.textProperty().bindBidirectional(binding.labelPerspectiveTransformLryProperty());
		sliderPerspectiveTransformUlx.valueProperty().bindBidirectional(binding.sliderPerspectiveTransformUlxProperty());
		sliderPerspectiveTransformUly.valueProperty().bindBidirectional(binding.sliderPerspectiveTransformUlyProperty());
		labelPerspectiveTransformUlx.textProperty().bindBidirectional(binding.labelPerspectiveTransformUlxProperty());
		labelPerspectiveTransformUly.textProperty().bindBidirectional(binding.labelPerspectiveTransformUlyProperty());
		sliderPerspectiveTransformUrx.valueProperty().bindBidirectional(binding.sliderPerspectiveTransformUrxProperty());
		sliderPerspectiveTransformUry.valueProperty().bindBidirectional(binding.sliderPerspectiveTransformUryProperty());
		labelPerspectiveTransformUrx.textProperty().bindBidirectional(binding.labelPerspectiveTransformUrxProperty());
		labelPerspectiveTransformUry.textProperty().bindBidirectional(binding.labelPerspectiveTransformUryProperty());
		sliderReflectionBottomOpacity.valueProperty().bindBidirectional(binding.sliderReflectionBottomOpacityProperty());
		labelReflectionBottomOpacity.textProperty().bindBidirectional(binding.labelReflectionBottomOpacityProperty());
		sliderReflectionTopOpacity.valueProperty().bindBidirectional(binding.sliderReflectionTopOpacityProperty());
		labelReflectionTopOpacity.textProperty().bindBidirectional(binding.labelReflectionTopOpacityProperty());
		sliderReflectionTopOffset.valueProperty().bindBidirectional(binding.sliderReflectionTopOffsetProperty());
		labelReflectionTopOffset.textProperty().bindBidirectional(binding.labelReflectionTopOffsetProperty());
		sliderReflectionFraction.valueProperty().bindBidirectional(binding.sliderReflectionFractionProperty());
		labelReflectionFraction.textProperty().bindBidirectional(binding.labelReflectionFractionProperty());
		sliderSepiaToneLevel.valueProperty().bindBidirectional(binding.sliderSepiaToneLevelProperty());
		labelsSepiaToneLevel.textProperty().bindBidirectional(binding.labelsSepiaToneLevelProperty());
		sliderShadowHeight.valueProperty().bindBidirectional(binding.sliderShadowHeightProperty());
		labelShadowHeight.textProperty().bindBidirectional(binding.labelShadowHeightProperty());
		sliderShadowWidth.valueProperty().bindBidirectional(binding.sliderShadowWidthProperty());
		labelShadowWidth.textProperty().bindBidirectional(binding.labelShadowWidthProperty());
		sliderShadowRadius.valueProperty().bindBidirectional(binding.sliderShadowRadiusProperty());
		labelShadowRadius.textProperty().bindBidirectional(binding.labelShadowRadiusProperty());
		comboIShadowBlurType.setItems(binding.sortedDataComboIShadowBlurType());
		binding.selectedDataComboIShadowBlurType().bind(comboIShadowBlurType.getSelectionModel().selectedItemProperty());
		colorPickerShadow.valueProperty().bindBidirectional(binding.colorPickerShadowProperty());
		sliderInnerShadowHeight.valueProperty().bindBidirectional(binding.sliderInnerShadowHeightProperty());
		labelInnerShadowHeight.textProperty().bindBidirectional(binding.labelInnerShadowHeightProperty());
		sliderInnerShadowWidth.valueProperty().bindBidirectional(binding.sliderInnerShadowWidthProperty());
		labelInnerShadowWidth.textProperty().bindBidirectional(binding.labelInnerShadowWidthProperty());
		sliderInnerShadowRadius.valueProperty().bindBidirectional(binding.sliderInnerShadowRadiusProperty());
		labelInnerShadowRadius.textProperty().bindBidirectional(binding.labelInnerShadowRadiusProperty());
		sliderInnerShadowOffsetX.valueProperty().bindBidirectional(binding.sliderInnerShadowOffsetXProperty());
		labelInnerShadowOffsetX.textProperty().bindBidirectional(binding.labelInnerShadowOffsetXProperty());
		sliderInnerShadowOffsetY.valueProperty().bindBidirectional(binding.sliderInnerShadowOffsetYProperty());
		labelInnerShadowOffsetY.textProperty().bindBidirectional(binding.labelInnerShadowOffsetYProperty());
		sliderInnerShadowSpread.valueProperty().bindBidirectional(binding.sliderInnerShadowSpreadProperty());
		labelInnerShadowSpread.textProperty().bindBidirectional(binding.labelInnerShadowSpreadProperty());
		comboInnerShadowBlurType.setItems(binding.sortedDataComboInnerShadowBlurType());
		binding.selectedDataComboInnerShadowBlurType().bind(comboInnerShadowBlurType.getSelectionModel().selectedItemProperty());
		colorPickerInnerShadow.valueProperty().bindBidirectional(binding.colorPickerInnerShadowProperty());
		sliderDropshadowHeight.valueProperty().bindBidirectional(binding.sliderDropshadowHeightProperty());
		labelDropshadowHeight.textProperty().bindBidirectional(binding.labelDropshadowHeightProperty());
		sliderDropshadowWidth.valueProperty().bindBidirectional(binding.sliderDropshadowWidthProperty());
		labelDropshadowWidth.textProperty().bindBidirectional(binding.labelDropshadowWidthProperty());
		sliderDropshadowRadius.valueProperty().bindBidirectional(binding.sliderDropshadowRadiusProperty());
		labelDropshadowRadius.textProperty().bindBidirectional(binding.labelDropshadowRadiusProperty());
		sliderDropshadowOffsetX.valueProperty().bindBidirectional(binding.sliderDropshadowOffsetXProperty());
		labelDropshadowOffsetX.textProperty().bindBidirectional(binding.labelDropshadowOffsetXProperty());
		sliderDropshadowOffsetY.valueProperty().bindBidirectional(binding.sliderDropshadowOffsetYProperty());
		labelDropshadowOffsetY.textProperty().bindBidirectional(binding.labelDropshadowOffsetYProperty());
		sliderDropshadowSpread.valueProperty().bindBidirectional(binding.sliderDropshadowSpreadProperty());
		labelDropshadowSpread.textProperty().bindBidirectional(binding.labelDropshadowSpreadProperty());
		comboDropShadowBlurType.setItems(binding.sortedDataComboDropShadowBlurType());
		binding.selectedDataComboDropShadowBlurType().bind(comboDropShadowBlurType.getSelectionModel().selectedItemProperty());
		colorPickerDropShadow.valueProperty().bindBidirectional(binding.colorPickerDropShadowProperty());
		sliderColorInputHeight.valueProperty().bindBidirectional(binding.sliderColorInputHeightProperty());
		labelColorInputHeight.textProperty().bindBidirectional(binding.labelColorInputHeightProperty());
		sliderColorInputWidth.valueProperty().bindBidirectional(binding.sliderColorInputWidthProperty());
		labelColorInputWidth.textProperty().bindBidirectional(binding.labelColorInputWidthProperty());
		sliderColorInputX.valueProperty().bindBidirectional(binding.sliderColorInputXProperty());
		labelColorInputX.textProperty().bindBidirectional(binding.labelColorInputXProperty());
		sliderColorInputY.valueProperty().bindBidirectional(binding.sliderColorInputYProperty());
		labelColorInputY.textProperty().bindBidirectional(binding.labelColorInputYProperty());
		colorPickerColorInput.valueProperty().bindBidirectional(binding.colorPickerColorInputProperty());
		
		bindSliderValuesToLabelText(false);
	}
	
	/**
	* Bind Slider Value to Label Text.
	*/
	protected void bindSliderValuesToLabelText(boolean enable){
		if(enable){
			labelBlendOpacity.textProperty().bind(sliderBlendOpacity.valueProperty().asString());
			labelBloomThreshold.textProperty().bind(sliderBloomThreshold.valueProperty().asString());
			labelBoxBlurWidth.textProperty().bind(sliderBoxBlurWidth.valueProperty().asString());
			labelBoxBlurHeight.textProperty().bind(sliderBoxBlurHeight.valueProperty().asString());
			labelBoxBlurIteration.textProperty().bind(sliderBoxBlurIteration.valueProperty().asString());
			labelColorAdjustContrast.textProperty().bind(sliderColorAdjustContrast.valueProperty().asString());
			labelColorAdjustBrigthness.textProperty().bind(sliderColorAdjustBrigthness.valueProperty().asString());
			labelColorAdjustHue.textProperty().bind(sliderColorAdjustHue.valueProperty().asString());
			labelColorAdjustSaturation.textProperty().bind(sliderColorAdjustSaturation.valueProperty().asString());
			labelDisplacementMapOffsetY.textProperty().bind(sliderDisplacementMapOffsetY.valueProperty().asString());
			labelDisplacementMapOffsetX.textProperty().bind(sliderDisplacementMapOffsetX.valueProperty().asString());
			labelDisplacementMapScaleX.textProperty().bind(sliderDisplacementMapScaleX.valueProperty().asString());
			labelDisplacementMapScaleY.textProperty().bind(sliderDisplacementMapScaleY.valueProperty().asString());
			labelGaussianBlurRadius.textProperty().bind(sliderGaussianBlurRadius.valueProperty().asString());
			labelGlowLevel.textProperty().bind(sliderGlowLevel.valueProperty().asString());
			labelLightningDiffuseConstant.textProperty().bind(sliderLightningDiffuseConstant.valueProperty().asString());
			labelLightningSpectularConstant.textProperty().bind(sliderLightningSpectularConstant.valueProperty().asString());
			labelLightningSpectularExponent.textProperty().bind(sliderLightningSpectularExponent.valueProperty().asString());
			labelLightningsurcfaceScale.textProperty().bind(sliderLightningsurcfaceScale.valueProperty().asString());
			labelLightningAzimuth.textProperty().bind(sliderLightningAzimuth.valueProperty().asString());
			labelLightningEvaluation.textProperty().bind(sliderLightningEvaluation.valueProperty().asString());
			labelMotionBlurAngel.textProperty().bind(sliderMotionBlurAngle.valueProperty().asString());
			labelMotionBlurRadius.textProperty().bind(sliderMotionBlurRadius.valueProperty().asString());
			labelPerspectiveTransformLlx.textProperty().bind(sliderPerspectiveTransformLlx.valueProperty().asString());
			labelPerspectiveTransformLly.textProperty().bind(sliderPerspectiveTransformLly.valueProperty().asString());
			labelPerspectiveTransformLrx.textProperty().bind(sliderPerspectiveTransformLrx.valueProperty().asString());
			labelPerspectiveTransformLry.textProperty().bind(sliderPerspectiveTransformLry.valueProperty().asString());
			labelPerspectiveTransformUlx.textProperty().bind(sliderPerspectiveTransformUlx.valueProperty().asString());
			labelPerspectiveTransformUly.textProperty().bind(sliderPerspectiveTransformUly.valueProperty().asString());
			labelPerspectiveTransformUrx.textProperty().bind(sliderPerspectiveTransformUrx.valueProperty().asString());
			labelPerspectiveTransformUry.textProperty().bind(sliderPerspectiveTransformUry.valueProperty().asString());
			labelReflectionBottomOpacity.textProperty().bind(sliderReflectionBottomOpacity.valueProperty().asString());
			labelReflectionTopOpacity.textProperty().bind(sliderReflectionTopOpacity.valueProperty().asString());
			labelReflectionTopOffset.textProperty().bind(sliderReflectionTopOffset.valueProperty().asString());
			labelReflectionFraction.textProperty().bind(sliderReflectionFraction.valueProperty().asString());
			labelsSepiaToneLevel.textProperty().bind(sliderSepiaToneLevel.valueProperty().asString());
			labelShadowHeight.textProperty().bind(sliderShadowHeight.valueProperty().asString());
			labelShadowWidth.textProperty().bind(sliderShadowWidth.valueProperty().asString());
			labelShadowRadius.textProperty().bind(sliderShadowRadius.valueProperty().asString());
			labelInnerShadowHeight.textProperty().bind(sliderInnerShadowHeight.valueProperty().asString());
			labelInnerShadowWidth.textProperty().bind(sliderInnerShadowWidth.valueProperty().asString());
			labelInnerShadowRadius.textProperty().bind(sliderInnerShadowRadius.valueProperty().asString());
			labelInnerShadowOffsetX.textProperty().bind(sliderInnerShadowOffsetX.valueProperty().asString());
			labelInnerShadowOffsetY.textProperty().bind(sliderInnerShadowOffsetY.valueProperty().asString());
			labelInnerShadowSpread.textProperty().bind(sliderInnerShadowSpread.valueProperty().asString());
			labelDropshadowHeight.textProperty().bind(sliderDropshadowHeight.valueProperty().asString());
			labelDropshadowWidth.textProperty().bind(sliderDropshadowWidth.valueProperty().asString());
			labelDropshadowRadius.textProperty().bind(sliderDropshadowRadius.valueProperty().asString());
			labelDropshadowOffsetX.textProperty().bind(sliderDropshadowOffsetX.valueProperty().asString());
			labelDropshadowOffsetY.textProperty().bind(sliderDropshadowOffsetY.valueProperty().asString());
			labelDropshadowSpread.textProperty().bind(sliderDropshadowSpread.valueProperty().asString());
			labelColorInputHeight.textProperty().bind(sliderColorInputHeight.valueProperty().asString());
			labelColorInputWidth.textProperty().bind(sliderColorInputWidth.valueProperty().asString());
			labelColorInputX.textProperty().bind(sliderColorInputX.valueProperty().asString());
			labelColorInputY.textProperty().bind(sliderColorInputY.valueProperty().asString());
		}
	}
}
